/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Questao2;

import Questao1.*;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.attribute.BasicFileAttributes;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashSet;
import java.util.Iterator;
import java.util.Set;
import java.util.TreeSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import sun.security.util.Length;

/**
 *
 * @author leona
 */
public class Interface extends javax.swing.JFrame {

    private ListaPalavras listaPalavras;
    ArvoreBinaria arvoreBi;
    BufferedReader arquivoInicial;
    FileOutputStream arquivoComprim;
    FileOutputStream arquivoBinario;

    /**
     * Creates new form Interface
     */
    public Interface() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        tfLocalArquivo = new javax.swing.JTextField();
        btAnalisar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btProcurarArquivo = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        taResultado = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        btComprimir = new javax.swing.JButton();
        tfLocalArquivoDest = new javax.swing.JTextField();
        btProcurarArquivoDesc = new javax.swing.JButton();
        btDescomprimir = new javax.swing.JButton();
        btProcurarArquivo2 = new javax.swing.JButton();
        tfLocalArquivoDescomprimi = new javax.swing.JTextField();
        btProcurarArquivo3 = new javax.swing.JButton();
        tfLocalArquivoDescomprimiSalvo = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane3.setViewportView(jTextArea1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tfLocalArquivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfLocalArquivoActionPerformed(evt);
            }
        });
        jPanel1.add(tfLocalArquivo, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 221, -1));

        btAnalisar.setText("Analisar Arquivo");
        btAnalisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAnalisarActionPerformed(evt);
            }
        });
        jPanel1.add(btAnalisar, new org.netbeans.lib.awtextra.AbsoluteConstraints(288, 31, 120, -1));

        jLabel1.setText("Selecione o Arquivo");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, -1, -1));

        btProcurarArquivo.setText("...");
        btProcurarArquivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btProcurarArquivoActionPerformed(evt);
            }
        });
        jPanel1.add(btProcurarArquivo, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 30, 33, -1));

        taResultado.setColumns(20);
        taResultado.setRows(5);
        jScrollPane1.setViewportView(taResultado);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, 410, 260));

        jLabel3.setText("Resultado:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, 70, -1));

        btComprimir.setText("Comprimir Arquivo");
        btComprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btComprimirActionPerformed(evt);
            }
        });
        jPanel1.add(btComprimir, new org.netbeans.lib.awtextra.AbsoluteConstraints(289, 60, 120, -1));

        tfLocalArquivoDest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfLocalArquivoDestActionPerformed(evt);
            }
        });
        jPanel1.add(tfLocalArquivoDest, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 221, -1));

        btProcurarArquivoDesc.setText("...");
        btProcurarArquivoDesc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btProcurarArquivoDescActionPerformed(evt);
            }
        });
        jPanel1.add(btProcurarArquivoDesc, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 60, 33, -1));

        btDescomprimir.setText("Descomprimir");
        btDescomprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDescomprimirActionPerformed(evt);
            }
        });
        jPanel1.add(btDescomprimir, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 90, 120, -1));

        btProcurarArquivo2.setText("...");
        btProcurarArquivo2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btProcurarArquivo2ActionPerformed(evt);
            }
        });
        jPanel1.add(btProcurarArquivo2, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 90, 33, -1));

        tfLocalArquivoDescomprimi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfLocalArquivoDescomprimiActionPerformed(evt);
            }
        });
        jPanel1.add(tfLocalArquivoDescomprimi, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 221, -1));

        btProcurarArquivo3.setText("...");
        btProcurarArquivo3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btProcurarArquivo3ActionPerformed(evt);
            }
        });
        jPanel1.add(btProcurarArquivo3, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 130, 33, -1));

        tfLocalArquivoDescomprimiSalvo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfLocalArquivoDescomprimiSalvoActionPerformed(evt);
            }
        });
        jPanel1.add(tfLocalArquivoDescomprimiSalvo, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 221, -1));

        jLabel2.setText("Salvar em:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tfLocalArquivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfLocalArquivoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfLocalArquivoActionPerformed

    private void btAnalisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAnalisarActionPerformed
        if (tfLocalArquivo.getText().equals("")) {
            taResultado.setText("");
            taResultado.setText("Arquivo inv√°lido");
            return;
        }
        //Teste Commit
        try {
            int c;
            arquivoInicial = new BufferedReader(new FileReader(tfLocalArquivo.getText()));
            Set<Character> set = new HashSet<Character>();
            ArrayList<NoArvoreBinaria> lista = new ArrayList<>();
            taResultado.setText("Tamanho Arquivo Original: " + Files.readAttributes(Paths.get(tfLocalArquivo.getText()), BasicFileAttributes.class).size() + " bytes \n");
            while (arquivoInicial.ready() && (c = arquivoInicial.read()) != -1) {
                set.add((char) c);
            }

            for (Iterator<Character> iterator = set.iterator(); iterator.hasNext();) {
                Character next = iterator.next();
                BufferedReader arq2 = new BufferedReader(new FileReader(tfLocalArquivo.getText()));
                int i = 0;
                while (arq2.ready() && (c = arq2.read()) != -1) {
                    if (next.equals((char) c)) {
                        i++;
                    }
                }
                //Letra let = new Letra(i,next);
                NoArvoreBinaria letra = new NoArvoreBinaria(i, next);
                lista.add(letra);
                //               taResultado.setText(taResultado.getText()+"Letra -> ("+letra.getLetra()+") Quantidade -> "+letra.getInfo()+"\n" );
            }

            Collections.sort(lista);

            /*for (Iterator<NoArvoreBinaria> iterator = lista.iterator(); iterator.hasNext();) {
                NoArvoreBinaria next = iterator.next();
                System.out.println(next.getLetra()+"--"+next.getInfo());
                
            }*/
            while (lista.size() > 1) {
                int valor = (int) lista.get(0).getInfo() + lista.get(1).getInfo();
                if (lista.size() == 2) {
                    NoArvoreBinaria novo = new NoArvoreBinaria(valor, lista.remove(0), lista.remove(0));
                    lista.add(novo);

                } else {
                    NoArvoreBinaria novo = new NoArvoreBinaria(valor, lista.remove(0), lista.remove(1));
                    lista.add(novo);

                }
                Collections.sort(lista);
            }

            //Declara√ß√£o Foi l√° pra cima
            arvoreBi = new ArvoreBinaria();
            arvoreBi.setRaiz(lista.get(0));
            taResultado.setText(taResultado.getText() + "Estrutura da arvore: \n" + arvoreBi.toString());
            taResultado.setText(taResultado.getText() + "\n Lista De c√≥digos \n" + arvoreBi.codigoLetras());

        } catch (FileNotFoundException ex) {
            Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NullPointerException ex) {
            Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
        }

//        taResultado.setText("");
//        listaPalavras.First();
//        while (!listaPalavras.EOF()) {
//            taResultado.setText(taResultado.getText() + listaPalavras.GetValor() + "\n");
//            listaPalavras.Next();
//        }
    }//GEN-LAST:event_btAnalisarActionPerformed

    private void btProcurarArquivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btProcurarArquivoActionPerformed

        JFileChooser file = new JFileChooser();
        file.setFileSelectionMode(JFileChooser.FILES_ONLY);
        int i = file.showSaveDialog(null);
        if (i == 1) {
            tfLocalArquivo.setText("");
        } else {
            File arquivo = file.getSelectedFile();
            tfLocalArquivo.setText(arquivo.getPath());
        }

    }//GEN-LAST:event_btProcurarArquivoActionPerformed

    private void btProcurarArquivoDescActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btProcurarArquivoDescActionPerformed
        JFileChooser file = new JFileChooser();
        file.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int i = file.showSaveDialog(null);
        if (i == 1) {
            tfLocalArquivoDest.setText("");
        } else {
            File arquivo = file.getSelectedFile();
            tfLocalArquivoDest.setText(arquivo.getPath());
        }
    }//GEN-LAST:event_btProcurarArquivoDescActionPerformed

    private void btComprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btComprimirActionPerformed
        try {
            if (arvoreBi == null) {
                return;
            }
            arquivoInicial = new BufferedReader(new FileReader(tfLocalArquivo.getText()));
            arquivoComprim = new FileOutputStream(tfLocalArquivoDest.getText() + "\\Comprimido.dat");
            arquivoBinario = new FileOutputStream(tfLocalArquivoDest.getText() + "\\Binario.txt");
            DataOutputStream bufferTexto = new DataOutputStream(arquivoComprim);

            String linha = arquivoInicial.readLine();
            while (linha != null) {
                String codigo = "";
                for (int i = 0; i < linha.length() - 1; i++) {
                    codigo = codigo + arvoreBi.getCaracter(linha.charAt(i));

                }
                //Escrever arquivoComprim arquivoBinario
                arquivoBinario.write(codigo.getBytes());
                byte cod;

                //gravar convertido
                for (int i = 0; i < codigo.length() - 1; i++) {
                    if (codigo.length() > i + 8) {
                        cod = (byte) Integer.parseInt(codigo.substring(i, i + 8));
                    } else {
                        cod = (byte) Integer.parseInt(codigo.substring(i, codigo.length() - 1));
                    }

                    bufferTexto.write(cod);
                    i = i + 8;
                }
                linha = arquivoInicial.readLine();
            }

            bufferTexto.close();
            taResultado.setText(taResultado.getText() + "Tamanho Arquivo Comprimido: " + Files.readAttributes(Paths.get(tfLocalArquivoDest.getText() + "\\Comprimido.dat"), BasicFileAttributes.class).size() + " bytes \n");

        } catch (IOException ex) {
            Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btComprimirActionPerformed

    private void tfLocalArquivoDestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfLocalArquivoDestActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfLocalArquivoDestActionPerformed

    private void btDescomprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDescomprimirActionPerformed
        try {
            if (arvoreBi == null) {
                return;
            }

            FileWriter arquivoDescompri = new FileWriter(tfLocalArquivoDescomprimiSalvo.getText() + "\\Descomprimido.dat");
            BufferedWriter arqDesc = new BufferedWriter(arquivoDescompri);
            BufferedReader arqui = new BufferedReader(new FileReader(tfLocalArquivoDescomprimi.getText()));

            String txt = arqui.readLine();
            NoArvoreBinaria no = arvoreBi.getRaiz();
            while (txt != null) {
                for (int i = 0; i < txt.length() - 1; i++) {
                    if (no.getDir() == null) {
                        arqDesc.write(no.getLetra());
                    } else {
                     if (txt.charAt(i) == '0'){
                        no = no.getDir(); 
                     } else{
                        no = no.getEsq(); 
                     }  
                    }

                    
                }
               txt = arqui.readLine();
               

                //arquivoBinario.write(codigo.getBytes());
                //Escrever arquivo Descomprimido
            }

        } catch (IOException ex) {
            Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btDescomprimirActionPerformed

    private void btProcurarArquivo2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btProcurarArquivo2ActionPerformed
        JFileChooser file = new JFileChooser();
        file.setFileSelectionMode(JFileChooser.FILES_ONLY);
        int i = file.showSaveDialog(null);
        if (i == 1) {
            tfLocalArquivoDescomprimi.setText("");
        } else {
            File arquivo = file.getSelectedFile();
            tfLocalArquivoDescomprimi.setText(arquivo.getPath());
        }
    }//GEN-LAST:event_btProcurarArquivo2ActionPerformed

    private void tfLocalArquivoDescomprimiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfLocalArquivoDescomprimiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfLocalArquivoDescomprimiActionPerformed

    private void btProcurarArquivo3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btProcurarArquivo3ActionPerformed
        JFileChooser file = new JFileChooser();
        file.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int i = file.showSaveDialog(null);
        if (i == 1) {
            tfLocalArquivoDescomprimi.setText("");
        } else {
            File arquivo = file.getSelectedFile();
            tfLocalArquivoDescomprimi.setText(arquivo.getPath());
        }
    }//GEN-LAST:event_btProcurarArquivo3ActionPerformed

    private void tfLocalArquivoDescomprimiSalvoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfLocalArquivoDescomprimiSalvoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfLocalArquivoDescomprimiSalvoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interface.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interface.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interface.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interface.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interface().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAnalisar;
    private javax.swing.JButton btComprimir;
    private javax.swing.JButton btDescomprimir;
    private javax.swing.JButton btProcurarArquivo;
    private javax.swing.JButton btProcurarArquivo2;
    private javax.swing.JButton btProcurarArquivo3;
    private javax.swing.JButton btProcurarArquivoDesc;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea taResultado;
    private javax.swing.JTextField tfLocalArquivo;
    private javax.swing.JTextField tfLocalArquivoDescomprimi;
    private javax.swing.JTextField tfLocalArquivoDescomprimiSalvo;
    private javax.swing.JTextField tfLocalArquivoDest;
    // End of variables declaration//GEN-END:variables
}
